// <auto-generated />
using System;
using Rtfx.Server.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Rtfx.Server.Database.Migrations.Sqlite
{
    [DbContext(typeof(SqliteDatabaseContext))]
    [Migration("20221114225456_AddedCreationDates")]
    partial class AddedCreationDates
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("Rtfx.Server.Database.Entities.Artifact", b =>
                {
                    b.Property<Guid>("ArtifactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PackageId")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("SourceHash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.HasKey("ArtifactId");

                    b.HasIndex("PackageId");

                    b.HasIndex("SourceHash")
                        .IsUnique();

                    b.ToTable("Artifacts");
                });

            modelBuilder.Entity("Rtfx.Server.Database.Entities.ArtifactMetadata", b =>
                {
                    b.Property<Guid>("ArtifactId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.HasKey("ArtifactId", "Name");

                    b.ToTable("ArtifactMetdata");
                });

            modelBuilder.Entity("Rtfx.Server.Database.Entities.ArtifactTag", b =>
                {
                    b.Property<Guid>("ArtifactId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Tag")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("ArtifactId", "Tag");

                    b.ToTable("ArtifactTags");
                });

            modelBuilder.Entity("Rtfx.Server.Database.Entities.Feed", b =>
                {
                    b.Property<Guid>("FeedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("FeedId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Feeds");
                });

            modelBuilder.Entity("Rtfx.Server.Database.Entities.Package", b =>
                {
                    b.Property<Guid>("PackageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FeedId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("PackageId");

                    b.HasIndex("FeedId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("Rtfx.Server.Database.Entities.Artifact", b =>
                {
                    b.HasOne("Rtfx.Server.Database.Entities.Package", "Package")
                        .WithMany("Artifacts")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Package");
                });

            modelBuilder.Entity("Rtfx.Server.Database.Entities.ArtifactMetadata", b =>
                {
                    b.HasOne("Rtfx.Server.Database.Entities.Artifact", "Artifact")
                        .WithMany("Metadata")
                        .HasForeignKey("ArtifactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artifact");
                });

            modelBuilder.Entity("Rtfx.Server.Database.Entities.ArtifactTag", b =>
                {
                    b.HasOne("Rtfx.Server.Database.Entities.Artifact", "Artifact")
                        .WithMany("Tags")
                        .HasForeignKey("ArtifactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artifact");
                });

            modelBuilder.Entity("Rtfx.Server.Database.Entities.Package", b =>
                {
                    b.HasOne("Rtfx.Server.Database.Entities.Feed", "Feed")
                        .WithMany("Packages")
                        .HasForeignKey("FeedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feed");
                });

            modelBuilder.Entity("Rtfx.Server.Database.Entities.Artifact", b =>
                {
                    b.Navigation("Metadata");

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("Rtfx.Server.Database.Entities.Feed", b =>
                {
                    b.Navigation("Packages");
                });

            modelBuilder.Entity("Rtfx.Server.Database.Entities.Package", b =>
                {
                    b.Navigation("Artifacts");
                });
#pragma warning restore 612, 618
        }
    }
}
